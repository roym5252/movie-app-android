plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.hilt)
    alias(libs.plugins.kapt)
    alias(libs.plugins.ksp)
}

android {
    namespace 'com.movieapp'
    compileSdk =  libs.versions.compileSdk.get() as int

    defaultConfig {
        applicationId "com.movieapp"
        minSdk = libs.versions.minSdk.get() as int
        targetSdk = libs.versions.targetSdk.get() as int
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    ndkVersion "23.0.7599858"

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {

    implementation(libs.androidx.core.ktx)
    implementation platform(libs.kotlin.bom)
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.appcompat
    implementation libs.androidx.lifecycle.viewmodel
    implementation libs.material
    implementation libs.androidx.core.splashscreen
    implementation libs.hilt.android
    implementation libs.androidx.uiautomator
    implementation libs.androidx.junit.ktx
    kapt(libs.hilt.compiler)

    testImplementation libs.retrofit
    testImplementation libs.picasso2.okhttp3.downloader
    testImplementation libs.logging.interceptor

    testImplementation libs.moshi
    ksp(libs.moshi.kotlin.codegen)
    testImplementation libs.retrofit2.converter.moshi

    debugImplementation libs.leakcanary.android
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    testImplementation libs.junit4
    testImplementation libs.junit.jupiter.params
    testImplementation libs.mockito.kotlin
    testImplementation (libs.kotlinx.coroutines.test)
    testImplementation(libs.mockwebserver)


    testImplementation libs.robolectric
    debugImplementation("androidx.fragment:fragment-testing:1.6.2")
    testImplementation("androidx.fragment:fragment-ktx:1.6.2")
    testImplementation("androidx.test:core:1.5.0")
    testImplementation("androidx.test:rules:1.5.0")
    testImplementation("androidx.test:runner:1.2.0")
    testImplementation('androidx.test:runner:1.4.0')
    testImplementation('androidx.test.espresso:espresso-core:3.5.1')

    testImplementation(libs.hilt.android.testing)
    // ...with Kotlin.
    kaptTest("com.google.dagger:hilt-android-compiler:2.45")
    // ...with Java.
    testAnnotationProcessor("com.google.dagger:hilt-android-compiler:2.45")

    implementation(project(":feature-login"))
    implementation(project(":feature-signup"))
    implementation(project(":feature-movielisting"))
    implementation(project(":core"))

}

hilt {
    enableTransformForLocalTests = true
}

kapt {
    correctErrorTypes true
}