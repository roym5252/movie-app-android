plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.hilt)
    alias(libs.plugins.kapt)
    alias(libs.plugins.ksp)
}

android {
    namespace 'com.movieapp.feature_login'
    compileSdk =  libs.versions.compileSdk.get() as int

    defaultConfig {
        minSdk = libs.versions.minSdk.get() as int
        targetSdk = libs.versions.targetSdk.get() as int

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation platform(libs.kotlin.bom)
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.lifecycle.viewmodel
    implementation libs.androidx.constraintlayout
    implementation libs.material
    implementation libs.spots.dialog
    implementation libs.hilt.android
    implementation libs.androidx.junit.ktx
    kapt(libs.hilt.compiler)

    debugImplementation libs.leakcanary.android
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    testImplementation libs.junit4
    testImplementation libs.junit.jupiter.params
    testImplementation libs.mockito.kotlin
    testImplementation (libs.kotlinx.coroutines.test)
    testImplementation(libs.mockwebserver)
    testImplementation libs.robolectric
    debugImplementation(libs.androidx.fragment.testing)
    testImplementation(libs.androidx.fragment.ktx)
    testImplementation(libs.androidx.core)
    testImplementation(libs.androidx.rules)
    testImplementation(libs.androidx.runner)
    testImplementation(libs.androidx.espresso.core)
    testImplementation(libs.hilt.android.testing)
    kaptTest(libs.hilt.compiler)
    testAnnotationProcessor(libs.hilt.compiler)

    implementation(project(":core"))
    testImplementation(project(":core"))
}

hilt {
    enableTransformForLocalTests = true
}

kapt {
    correctErrorTypes true
}